worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Logging configuration
    log_format debug_format '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_x_forwarded_for" "$http_host"';

    access_log logs/access.log debug_format;

    server {
        listen       80;
        server_name  localhost;

        # Always send these headers, even on 403
        # always_add_header X-Debug-Remote-Addr $remote_addr;
        # always_add_header X-Debug-Forwarded-For $http_x_forwarded_for;
        # always_add_header X-Debug-Allow-Request $allow_request;

        location / {
            root   html;
            index  index.html index.htm;

            # Reset allow_request at the start of each request
            set $allow_request 0;

            # Explicit checks with logging
            if ($remote_addr = 127.0.0.1) {
                set $allow_request 1;
                access_log logs/access.log debug_format;
            }

            if ($remote_addr = ::1) {
                set $allow_request 1;
                access_log logs/access.log debug_format;
            }

            # Check X-Forwarded-For with more permissive matching
            if ($http_x_forwarded_for ~* "127\.0\.0\.\d+|::1|localhost") {
                set $allow_request 1;
                access_log logs/debug.log debug_format;
            }

            # Deny if not allowed
            if ($allow_request = 0) {
                return 403;
            }
        }

        # Custom error pages with debug headers
        error_page 403 /403.html;
        location = /403.html {
            # always_add_header X-Debug-Remote-Addr $remote_addr;
            # always_add_header X-Debug-Forwarded-For $http_x_forwarded_for;
            root html;
        }
    }
}